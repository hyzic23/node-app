const createError =  require('../utils/error');

const User = require('../models/user');
const bcrypt = require('bcrypt');

const register = async (req, res, next) => {
    try {
        const salt = bcrypt.genSaltSync(10);
        const hash = bcrypt.hashSync(req.body.password, salt);

        const newUser = new User({
            username: req.body.username,
            email: req.body.email,
            password: hash
        })

        await newUser.save();
        res.status(200).send('User has been created successfully!');
    } catch (error) {
        console.log(error)
        next(error)
    }
}

const login = async (req, res, next) => {
    try {
        const user = await User.findOne({username: req.body.username});
        if(!user) return next(createError(404, 'User not found'))

        const isPasswordCorrect = await bcrypt.compare(req.body.password, user.password)
        if(!isPasswordCorrect) return next(createError(400, 'Wrong password or username'))
       
        //This will remove Password and isAdmin as part of the response
        const { password, isAdmin, ...otherDetails} = user._doc;
        res.status(200).json({...otherDetails});
    } catch (error) {
        console.log(error)
        next(error)
    }
}

const dummyApi = async (req, res) => {
    console.log('Hey!!!')
    res.status(200).send('User has been created successfully!');
}

module.exports = {
    register,
    login,
    dummyApi
}

